[core]
	excludesfile = /Users/levibostian/.gitignore_global
	autocrlf = false
[push]
	default = simple
[user]
	name = Levi Bostian
	email = levi.bostian@gmail.com
[alias]
    # one-line log
    l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short

    aa = add .    
    cm = commit -m    
    cne = commit --amend --no-edit

    s = status
    co = checkout
    cob = checkout -b

    # list branches with most recent commits
    # https://stackoverflow.com/a/5188364
    bl = branch --sort=-committerdate 
    
    i = init

    p = "!git push -u origin $(git branch-name)"
    pf = push -f
    ac = "!f() { git add .; echo $1; git commit; }; f"
    pushall = push -u origin --all

    b = "!git branch-name"
    branch-name = "!git rev-parse --abbrev-ref HEAD"
    # Updates this branch from another remote branch 
    # Thanks, https://stackoverflow.com/questions/29895560/how-to-pull-a-git-branch-without-checking-it-out
    # https://stackoverflow.com/questions/65347361/git-update-local-master-branch-without-checkout
    merge-branch = "!git fetch origin $1:$1 && git merge $1 && echo 'merged in changes from $1"
    

    # open PR for this current branch on github
    pr = "!gh pr view $(git branch-name) --web"

[pull]
	rebase = false

# Do *not* allow GPG signing on a global level. Swift package manager and fastlane perform git actions on our behalf and gpg signing makes these operations fail. Instead, I have made it a practice to always enable gpg code signing for each project once I clone it by using aliases to make commits that automatically sign and using code snippets that I copy/paste to set git configs.
# [commit]
# 	gpgsign = true
[gpg]
	program = gpg
[init]
	defaultBranch = main
